{"version":3,"sources":["reportWebVitals.js","pages/components/Todo/Edit.js","pages/components/Todo/Item.js","pages/components/Todo/List.js","pages/components/Todo.js","pages/components/Clock/Countdown.js","pages/components/Clock.js","pages/Home.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","EditWrap","styled","div","Edit","setWork","useState","note","setNote","type","value","onChange","e","target","placeholder","onClick","prevData","id","v4","ItemWrap","ButtomBlock","Item","delWork","setCurrentTask","htmlFor","className","prev","filter","item","ListWrap","List","Listdata","map","TodoWarp","Profile","Todo","work","href","rel","icon","fab","faBlogger","color","faGithub","faLinkedin","TimeCount","Btn","Countdown","interval","timer","useRef","current","countdown","setCountdown","fas","faPlay","countstart","setCountStart","leastTime","time","setTime","workTime","setWorkTime","isTimerGoing","init","clearInterval","useEffect","setInterval","realTime","Date","getTime","Math","round","min","floor","sec","workChange","faRedo","faPause","faStepForward","ClockWarp","CurrentTodo","h1","Clock","currentTask","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c05ccfa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @jsxImportSource @emotion/react */  \r\nimport styled from '@emotion/styled'\r\nimport { useState } from 'react';\r\nimport { v4  } from 'uuid';\r\n\r\n\r\n\r\nconst EditWrap = styled.div`\r\n  padding:20px 0px;\r\n  width: 88%;\r\n  text-align: center;\r\n  position: relative;\r\n  margin: auto;\r\n  & input{\r\n    width: 80%;\r\n    font-size: x-large;\r\n    border-radius: 50px;\r\n    box-sizing: border-box;\r\n    padding: 10px 20px;\r\n    &:focus{\r\n      outline: none;\r\n    }\r\n    @media screen and (max-width: 700px) {\r\n    width: 60%;    \r\n    \r\n}\r\n  }\r\n  & button{\r\n    width: 50px;\r\n    height: 50px;\r\n    font-weight: bold;\r\n    border-radius: 50%;\r\n    margin: auto 5px;\r\n    background-color:  #272727;\r\n    border: 3px solid #ccc;\r\n    color: #ccc;\r\n  }    \r\n  \r\n  \r\n`\r\n\r\nconst Edit = ({ setWork }) => {\r\n  const [note,setNote] = useState(\"\")\r\n  const noteChange = (e) =>{\r\n    setNote(e.target.value)\r\n  }\r\n\r\n\r\n  const addWork = (e) => {\r\n    setWork(function(prevData){\r\n      return [{\r\n        id:v4(),\r\n        note, },...prevData]\r\n    })\r\n    setNote(e.target.value=\"\")\r\n  }\r\n  return (\r\n    <EditWrap>\r\n      <input type=\"text\" value={ note } onChange={ noteChange } placeholder='Give me a task'/>\r\n      <button onClick={ addWork }>Add</button>\r\n    </EditWrap>\r\n  );\r\n};\r\n\r\nexport default Edit;","/** @jsxImportSource @emotion/react */  \r\nimport styled from '@emotion/styled'\r\nimport React from 'react';\r\n\r\nconst ItemWrap = styled.div`\r\n  border: 1px dotted #333;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  padding: 2px 5px;\r\n  & p{\r\n    overflow-x:hidden;\r\n    width: 80%;\r\n  }\r\n  & input{\r\n    margin: .2em 1em;\r\n    &:checked  + label{\r\n      display: none;\r\n    }\r\n  }\r\n`\r\nconst ButtomBlock=styled.div`\r\n  width: 30%;\r\n  text-align: right;\r\n  \r\n  & button{\r\n    margin: 0px 3px;\r\n    padding: 0 3px;\r\n    border-radius: 20px;\r\n    font-weight: bold;\r\n    border-color: #000;\r\n    cursor: pointer;\r\n    \r\n  }\r\n  & #OK{\r\n      background-color: #444;\r\n      color: #ddd;\r\n      \r\n    }\r\n  & #Del{\r\n    background-color: #FF0080;\r\n    color:#000;\r\n  }\r\n`\r\n\r\n\r\nconst Item = ({ id,note,delWork,setCurrentTask}) => {\r\n  const noteDone=()=>{\r\n    delWork(function(prev){\r\n      return prev.filter(item=>item.id !== id)      \r\n    })\r\n  }\r\n  const noteChoose=()=>{\r\n    setCurrentTask(note)\r\n  }\r\n  return (\r\n    <ItemWrap><input type=\"checkbox\"/>\r\n      <p>{note}</p>\r\n      <label htmlFor=\"input\" id={id}></label>\r\n      <ButtomBlock className='Btn'>\r\n        <button id=\"OK\" onClick={noteDone}>刪除</button>\r\n        <button id=\"Del\" onClick={noteChoose}>選擇</button>\r\n      </ButtomBlock>\r\n    </ItemWrap>\r\n  );\r\n};\r\nexport default Item;  \r\n","/** @jsxImportSource @emotion/react */  \r\nimport styled from '@emotion/styled'\r\nimport Item from './Item';\r\n\r\nconst ListWrap = styled.div`\r\n  margin:1vh 2em;\r\n  background-color: #ddd;\r\n  height: 45%;\r\n  overflow-x:hidden;\r\n  overflow-y: auto;\r\n  @media screen and (max-width: 700px) {\r\n    height: 35%;\r\n    \r\n}\r\n`\r\n\r\nconst List = ({ Listdata, delWork, setCurrentTask}) => {\r\n  return (\r\n    <ListWrap>\r\n      {     \r\n      Listdata.map(item => {\r\n        const { id, note, } =item\r\n        return <Item key={ id } id={ id } note ={note} delWork={delWork} setCurrentTask={setCurrentTask}/>\r\n      })}\r\n      \r\n    </ListWrap>\r\n  );\r\n};\r\n\r\nexport default List;","/** @jsxImportSource @emotion/react */  \r\nimport styled from '@emotion/styled'\r\nimport Edit from './Todo/Edit';\r\nimport List from './Todo/List'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { fas } from '@fortawesome/free-solid-svg-icons'\r\n// import { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { useState } from 'react';\r\n\r\nconst TodoWarp = styled.div`\r\n  height: 100vh;\r\n  width: 40%;\r\n  background-color: #272727;\r\n  @media screen and (max-width: 800px) {\r\n    height: 55vh;\r\n    width: 100vw;    \r\n  }\r\n`\r\nconst Profile =styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin:auto;\r\n  font-size: 10vw;\r\n\r\n`\r\nconst Todo = ({ setCurrentTask }) => {\r\n  const [work, setWork]=useState([]);\r\n  return (\r\n    <TodoWarp>\r\n      <Edit setWork={ setWork }></Edit>\r\n      <List Listdata={ work } delWork={ setWork } setCurrentTask={ setCurrentTask }></List> \r\n      <Profile>\r\n        {/* https://pjchender.blogspot.com/2020/05/relnoreferrer-targetblank.html */}\r\n        <a href=\"https://freddy10-github.github.io/\"  target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={fab.faBlogger}  color='#777'/></a>    \r\n        <a href=\"https://github.com/Freddy10-github\"  target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={fab.faGithub}  color='#777'/></a>         \r\n        <a href=\"https://www.linkedin.com/in/freddy-lo/\"  target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={fab.faLinkedin}  color='#777'/></a>        \r\n      </Profile>\r\n    </TodoWarp>\r\n  );\r\n};\r\n\r\nexport default Todo;","/** @jsxImportSource @emotion/react */  \r\nimport styled from '@emotion/styled'\r\nimport { useState, useEffect, useRef,  } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TimeCount = styled.div`\r\n  width: 100%;\r\n  border: 2px solid #ddd;\r\n  padding:10px 0px 0px ;\r\n  color: #ddd;\r\n  border-radius:30px;\r\n  text-align: center;\r\n  font-size: xx-large;\r\n  overflow: hidden;\r\n  height:4em;\r\n  margin-top:5em;\r\n  @media screen and (max-width: 800px) {\r\n    margin-top:.2em;\r\n}\r\n  & p{\r\n    height: 2em;\r\n    display: block;\r\n    line-height: 2em;\r\n  }`\r\nconst Btn = styled.div`\r\n  width: 100%;\r\n  height: 2em;  \r\n  display: flex;\r\n  border-top: 1px solid #ddd;\r\n  justify-content: space-around;\r\n  \r\n  & .icon{\r\n    width: 100%;\r\n    height: 70%;\r\n    border: 1px solid #ddd;\r\n    padding: .3em 0;\r\n    transition: all .2s\r\n  }\r\n  \r\n  & .icon:hover{\r\n      color: #333;\r\n      cursor: pointer;\r\n    }\r\n`\r\n\r\nconst Countdown = () => {\r\n  const timer = useRef(25)\r\n  const [countdown,setCountdown] = useState(`${timer.current} : 00`)\r\n  const [countstart,setCountStart] = useState(fas.faPlay )\r\n  const leastTime = useRef()\r\n  const [time, setTime] = useState()\r\n  const [workTime,setWorkTime] = useState(timer.current*60)\r\n  const isTimerGoing = useRef(false)\r\n  var interval\r\n \r\n\r\n  function init (){\r\n    setCountdown(`${timer.current} : 00`)\r\n    setCountStart(fas.faPlay )\r\n    isTimerGoing.current=false\r\n    clearInterval(interval)\r\n    setWorkTime(timer.current*60)\r\n  }\r\n  const startTimer = () =>{\r\n    interval = setInterval(()=>{\r\n      \r\n      let realTime = new Date().getTime()\r\n      leastTime.current=workTime-(Math.round((realTime-time)/1000))\r\n      let min = Math.floor(leastTime.current/60)\r\n      let sec = leastTime.current % 60\r\n      sec = sec < 10 ? '0' + sec : sec\r\n      setCountdown(`${min} : ${sec}`)\r\n      if(leastTime.current<1){        \r\n        clearInterval(interval)\r\n        workChange()\r\n      }\r\n    },1000)\r\n  }\r\n  \r\n  \r\n  useEffect(()=>{\r\n    if(!isTimerGoing.current)\r\n      return\r\n    startTimer()\r\n    return ()=>{\r\n      clearInterval(interval)\r\n    }\r\n  },[countstart])\r\n  const workStart = () =>{\r\n    setTime(new Date().getTime())\r\n    if (isTimerGoing.current)\r\n      {clearInterval(interval)\r\n        setWorkTime(leastTime.current)}\r\n    isTimerGoing.current = isTimerGoing.current === false ? true : false\r\n    setCountStart(isTimerGoing.current === false ? fas.faPlay : fas.faPause)\r\n    \r\n    \r\n  }\r\n  const workReset = () =>{\r\n    init()\r\n  }\r\n  const workChange = () =>{\r\n    if(timer.current === 25) timer.current = 5\r\n      else timer.current = 25\r\n    init()\r\n  }\r\n  return (\r\n    <TimeCount>\r\n      <p>{countdown}</p>\r\n      <Btn>\r\n        <FontAwesomeIcon onClick={ workReset } className='icon' icon={fas.faRedo}/>\r\n        <FontAwesomeIcon onClick={ workStart } className='icon' icon={countstart}/>\r\n        <FontAwesomeIcon onClick={ workChange }className='icon' icon={fas.faStepForward}/>\r\n      </Btn>\r\n    </TimeCount>\r\n\r\n  );\r\n};\r\n\r\nexport default Countdown;","/** @jsxImportSource @emotion/react */  \r\nimport styled from '@emotion/styled'\r\nimport Countdown from './Clock/Countdown';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { fas } from '@fortawesome/free-solid-svg-icons'\r\n// import Comment from './Clock/Comment';\r\n\r\nconst ClockWarp = styled.div`\r\n  height: 100vh;\r\n  width: 60%;\r\n  background-color: #9F0050; \r\n  padding: 50px 15%;\r\n  box-sizing: border-box;\r\n  @media screen and (max-width: 800px) {\r\n    height: 45vh;\r\n    width: 100vw;\r\n  }\r\n  \r\n  & .choose{\r\n    /* display: none; */\r\n    position: sticky;\r\n    background-color: #ccc;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: 2;\r\n  }\r\n`\r\n\r\nconst  CurrentTodo = styled.h1`\r\n  text-align: center;\r\n  font-size: xx-large;\r\n  background-color: #ddd;\r\n  padding:10px 0px 15px ;\r\n  border-radius:30px;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst Clock = ({currentTask}) => {  \r\n  return (\r\n    <ClockWarp>      \r\n        <CurrentTodo >{currentTask}</CurrentTodo>\r\n        <Countdown></Countdown>\r\n    </ClockWarp>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import Todo from \"./components/Todo\";\r\nimport Clock from \"./components/Clock\";\r\nimport { useState } from 'react';\r\n\r\nfunction Home() {\r\n  const [currentTask, setCurrentTask] = useState('選擇任務')  \r\n  return (\r\n  <div className=\"container\">\r\n    <Todo setCurrentTask={setCurrentTask}/>\r\n    <Clock currentTask = {currentTask}/>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './pages/Home'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}